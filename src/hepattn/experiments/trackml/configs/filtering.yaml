seed_everything: 42
name: HC-v3

data:
  train_dir: /share/rcifdata/maxhart/data/trackml/prepped/train/
  val_dir: /share/rcifdata/maxhart/data/trackml/prepped/val/
  test_dir: /share/rcifdata/maxhart/data/trackml/prepped/test/

  num_workers: 10
  num_train: -1
  num_test: -1
  num_val: -1

  # Select only hits from these detector volumes
  # pix barrel: 8, pix endcap: 7, 9
  # See: https://competitions.codalab.org/competitions/20112
  hit_volume_ids: [7, 8, 9]

  # Minimum pt for a particle to be deemed reconstructible
  particle_min_pt: 0.9

  # Maximum absolute eta for a particle to be deemed reconstructible
  particle_max_abs_eta: 4.0

  # Minimum number of true hits for a particle to be deemed reconstructible
  particle_min_num_hits: 3

  # Maximum number of reconstructable particles allowed in an event (not relevant for filtering)
  event_max_num_particles: 3000

  # Define which inputs will be available to the model
  inputs:
    hit:
      # Global hit coords
      - x
      - y
      - z
      - r
      - s
      - eta
      - phi
      - u
      - v
      # Hit local charge information
      - charge_frac
      - leta
      - lphi
      - lx
      - ly
      - lz
      - geta
      - gphi

  targets:
    hit:
      - on_valid_particle

trainer:
  # Training stuff here
  max_epochs: 30
  accelerator: gpu
  devices: 1
  precision: bf16-mixed
  log_every_n_steps: 50
  default_root_dir: logs
  gradient_clip_val: 0.1
  enable_progress_bar: True

  # Specify loggers here
  logger:
    class_path: lightning.pytorch.loggers.CometLogger
    init_args:
      project_name: trackml_filtering

  callbacks:
    - class_path: hepattn.callbacks.Compile
    - class_path: hepattn.callbacks.InferenceTimer
    - class_path: hepattn.callbacks.SaveConfig
    - class_path: hepattn.callbacks.Checkpoint
      init_args:
        monitor: val/loss
    - class_path: hepattn.callbacks.PredictionWriter
      init_args:
        write_inputs: false
        write_outputs: false
        write_preds: true
        write_targets: false
        write_losses: false
    - class_path: lightning.pytorch.callbacks.LearningRateMonitor
    - class_path: lightning.pytorch.callbacks.TQDMProgressBar
      init_args:
        refresh_rate: 50

model:
  optimizer: Lion

  lrs_config:
    initial: 1e-5
    max: 5e-5
    end: 1e-6
    pct_start: 0.05
    weight_decay: 1e-5

  model:
    class_path: hepattn.models.HitFilter
    init_args:
      input_sort_field: phi
      input_nets:
        class_path: torch.nn.ModuleList
        init_args:
          modules:
            - class_path: hepattn.models.InputNet
              init_args:
                input_name: hit
                fields:
                  - x
                  - y
                  - z
                  - r
                  - eta
                  - phi
                  - u
                  - v
                  - charge_frac
                  - leta
                  - lphi
                  - lx
                  - ly
                  - lz
                  - geta
                  - gphi
                net:
                  class_path: hepattn.models.Dense
                  init_args:
                    input_size: 16
                    output_size: &dim 256
                    norm_input: true
                posenc:
                  class_path: hepattn.models.FourierPositionEncoder
                  init_args:
                    input_name: hit
                    fields:
                      - r
                      - eta
                      - phi
                    dim: *dim
                    scale: 0.1
      encoder:
        class_path: hepattn.models.Encoder
        init_args:
          num_layers: 10
          dim: *dim
          attn_type: flash
          window_size: 1024
          window_wrap: true
          hybrid_norm: true
          norm: RMSNorm

      tasks:
        class_path: torch.nn.ModuleList
        init_args:
          modules:
            - class_path: hepattn.models.task.HitFilterTask
              init_args:
                name: hit_filter
                input_object: hit
                target_field: on_valid_particle
                dim: *dim
                threshold: 0.1
                loss_fn: bce
